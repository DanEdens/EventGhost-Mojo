error[E0308]: mismatched types
   --> src\eg\classes\log_ctrl.rs:128:36
    |
128 |         self.widget.scroll_to_iter(&self.buffer.end_iter(), 0.0, false, 0.0, 0.0);
    |                     -------------- ^^^^^^^^^^^^^^^^^^^^^^^ types differ in mutability
    |                     |
    |                     arguments to this method are incorrect
    |
    = note: expected mutable reference `&mut TextIter`
                       found reference `&TextIter`
note: method defined here
   --> C:\Users\Dan\.cargo\registry\src\index.crates.io-6f17d22bba15001f\gtk4-0.6.6\src\auto\text_view.rs:612:8
    |
612 |     fn scroll_to_iter(
    |        ^^^^^^^^^^^^^^

error[E0061]: this function takes 2 arguments but 0 arguments were supplied
  --> src\eg\classes\main_frame.rs:56:25
   |
56 |         let tree_ctrl = TreeCtrl::new();
   |                         ^^^^^^^^^^^^^-- two arguments of type `HWND` and `HINSTANCE` are missing
   |
note: associated function defined here
  --> src\eg\classes\tree_ctrl.rs:32:12
   |
32 |     pub fn new(parent: HWND, instance: HINSTANCE) -> Result<Self, Error> {
   |            ^^^ ------------  -------------------
help: provide the arguments
   |
56 |         let tree_ctrl = TreeCtrl::new(/* HWND */, /* HINSTANCE */);
   |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0609]: no field `widget` on type `Result<TreeCtrl, core::error::Error>`
  --> src\eg\classes\main_frame.rs:57:47
   |
57 |         tree_scroll.set_child(Some(&tree_ctrl.widget));
   |                                               ^^^^^^

error[E0308]: mismatched types
   --> src\eg\classes\main_frame.rs:83:29
    |
83  |             tree_ctrl: Some(tree_ctrl),
    |                        ---- ^^^^^^^^^ expected `TreeCtrl`, found `Result<TreeCtrl, Error>`
    |                        |
    |                        arguments to this enum variant are incorrect
    |
    = note: expected struct `TreeCtrl`
                 found enum `Result<TreeCtrl, core::error::Error>`
help: the type constructed contains `Result<TreeCtrl, core::error::Error>` due to the type of the argument passed
   --> src\eg\classes\main_frame.rs:83:24
    |
83  |             tree_ctrl: Some(tree_ctrl),
    |                        ^^^^^---------^
    |                             |
    |                             this argument influences the type of `Some`
note: tuple variant defined here
   --> C:\ProgramData\chocolatey\lib\rust\tools\lib/rustlib/src/rust\library\core\src\option.rs:571:5
    |
571 |     Some(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     ^^^^

error[E0609]: no field `hwnd` on type `&mut MainFrame`
   --> src\eg\classes\main_frame.rs:252:32
    |
252 |             DestroyWindow(self.hwnd);
    |                                ^^^^ unknown field
    |
    = note: available fields are: `window`, `tree_ctrl`, `log_ctrl`, `status_bar`, `document`

error[E0308]: arguments to this function are incorrect
  --> src\eg\classes\tree_ctrl.rs:72:20
   |
72 |         let hwnd = win32::create_window(
   |                    ^^^^^^^^^^^^^^^^^^^^
73 |             "SysTreeView32\0",
   |             ----------------- expected `PCSTR`, found `&str`
74 |             "",
   |             -- expected `PCSTR`, found `&str`
   |
note: function defined here
  --> src\win32\window.rs:24:8
   |
24 | pub fn create_window(
   |        ^^^^^^^^^^^^^
25 |     class_name: PCSTR,
   |     -----------------
26 |     window_name: PCSTR,
   |     ------------------
27 |     style: WINDOW_STYLE,
   |     -------------------
28 |     x: i32,
   |     ------
29 |     y: i32,
   |     ------
30 |     width: i32,
   |     ----------
31 |     height: i32,
   |     -----------
32 |     parent: Option<HWND>,
   |     --------------------
33 |     instance: HINSTANCE,
   |     -------------------

error[E0308]: mismatched types
   --> src\eg\classes\tree_ctrl.rs:113:16
    |
113 |         if let Some(path) = self.store.path(iter) {
    |                ^^^^^^^^^^   --------------------- this expression has type `TreePath`
    |                |
    |                expected `TreePath`, found `Option<_>`
    |
    = note: expected struct `TreePath`
                 found enum `std::option::Option<_>`

error[E0308]: mismatched types
   --> src\eg\classes\tree_ctrl.rs:119:16
    |
119 |         if let Some(path) = self.store.path(iter) {
    |                ^^^^^^^^^^   --------------------- this expression has type `TreePath`
    |                |
    |                expected `TreePath`, found `Option<_>`
    |
    = note: expected struct `TreePath`
                 found enum `std::option::Option<_>`

error[E0308]: arguments to this function are incorrect
  --> src\eg\classes\toolbar.rs:59:20
   |
59 |         let hwnd = win32::create_window(
   |                    ^^^^^^^^^^^^^^^^^^^^
60 |             "ToolbarWindow32\0",
   |             ------------------- expected `PCSTR`, found `&str`
61 |             "",
   |             -- expected `PCSTR`, found `&str`
   |
note: function defined here
  --> src\win32\window.rs:24:8
   |
24 | pub fn create_window(
   |        ^^^^^^^^^^^^^
25 |     class_name: PCSTR,
   |     -----------------
26 |     window_name: PCSTR,
   |     ------------------
27 |     style: WINDOW_STYLE,
   |     -------------------
28 |     x: i32,
   |     ------
29 |     y: i32,
   |     ------
30 |     width: i32,
   |     ----------
31 |     height: i32,
   |     -----------
32 |     parent: Option<HWND>,
   |     --------------------
33 |     instance: HINSTANCE,
   |     -------------------

error[E0599]: no method named `map_err` found for struct `LRESULT` in the current scope
 --> src\win32\utils.rs:8:49
  |
8 |         SendMessageA(hwnd, msg, wparam, lparam).map_err(|e| Error::Win32(format!("Failed to send message: {}", e)))
  |                                                 ^^^^^^^ method not found in `LRESULT`

error[E0599]: no method named `map_err` found for type `i32` in the current scope
  --> src\win32\utils.rs:21:41
   |
21 |         GetWindowTextA(hwnd, &mut text).map_err(|e| Error::Win32(format!("Failed to get window text: {}", e)))?
   |                                         ^^^^^^^ method not found in `i32`

error[E0599]: no method named `map_err` found for type `i32` in the current scope
  --> src\win32\utils.rs:95:14
   |
94 | /         GetClassNameA(hwnd, &mut name)
95 | |             .map_err(|e| Error::Win32(format!("Failed to get class name: {}", e)))?
   | |             -^^^^^^^ method not found in `i32`
   | |_____________|
   |

error[E0599]: no method named `map_err` found for struct `BOOL` in the current scope
   --> src\win32\utils.rs:137:14
    |
136 | /         EnumChildWindows(parent, Some(enum_proc), lparam)
137 | |             .map_err(|e| Error::Win32(format!("Failed to enumerate child windows: {}", e)))?;
    | |             -^^^^^^^ method not found in `BOOL`
    | |_____________|
    |

error[E0606]: casting `&mut std::boxed::Box<std::boxed::Box<dyn FnMut(HWND) -> bool>>` as `*mut std::boxed::Box<dyn FnMut(HWND) -> bool>` is invalid
   --> src\win32\utils.rs:134:29
    |
134 |         let lparam = LPARAM((&mut boxed_callback as *mut Box<dyn FnMut(HWND) -> bool>) as isize);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `super::UIComponent`
  --> src\eg\classes\main_frame.rs:12:5
   |
12 | use super::UIComponent;
   |     ^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0061, E0308, E0412, E0425, E0432, E0599, E0606, E0609.
For more information about an error, try `rustc --explain E0061`.
error: could not compile `eventghost` (lib) due to 31 previous errors; 41 warnings emitted