{"reason":"compiler-artifact","package_id":"proc-macro2 1.0.93 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\proc-macro2-1.0.93\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\proc-macro2-1.0.93\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\proc-macro2-9545e1a2a66a7687\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"proc-macro2 1.0.93 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["no_literal_byte_character","no_literal_c_string","wrap_proc_macro"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\proc-macro2-c2e7968378e94aa3\\out"}
{"reason":"compiler-artifact","package_id":"unicode-ident 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\unicode-ident-1.0.14\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_ident","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\unicode-ident-1.0.14\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libunicode_ident-02bcbfa24a7a895a.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libunicode_ident-02bcbfa24a7a895a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows_x86_64_gnu 0.52.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.52.6\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.52.6\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\windows_x86_64_gnu-0b3b6ae583095858\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"cfg-if 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\cfg-if-1.0.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg-if","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\cfg-if-1.0.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libcfg_if-ee82f20a53108781.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"autocfg 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\autocfg-1.4.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"autocfg","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\autocfg-1.4.0\\src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libautocfg-53d554a440bb4f56.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libautocfg-53d554a440bb4f56.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"serde 1.0.217 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde-1.0.217\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde-1.0.217\\build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","serde_derive","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\serde-04eaa2bad13ab145\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"once_cell 1.20.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\once_cell-1.20.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\once_cell-1.20.2\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libonce_cell-43e2a847a8a497ed.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"smallvec 1.13.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\smallvec-1.13.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"smallvec","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\smallvec-1.13.2\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["const_generics"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsmallvec-1d57cebce5ae9c0f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"stable_deref_trait 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\stable_deref_trait-1.2.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"stable_deref_trait","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\stable_deref_trait-1.2.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libstable_deref_trait-938b2bf5f7c5a95f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows_x86_64_gnu 0.48.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.48.5\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.48.5\\build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\windows_x86_64_gnu-1ba651532cce6e63\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"khronos_api 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\khronos_api-3.1.0\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\khronos_api-3.1.0\\build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\khronos_api-2969f70542455adb\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"cfg_aliases 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\cfg_aliases-0.1.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_aliases","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\cfg_aliases-0.1.1\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libcfg_aliases-34fab190794f0fa1.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libcfg_aliases-34fab190794f0fa1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows_x86_64_gnu 0.42.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.42.2\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.42.2\\build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\windows_x86_64_gnu-35c042dc94f1700a\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"writeable 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\writeable-0.5.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"writeable","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\writeable-0.5.5\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwriteable-73dbe355fd41f512.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"litemap 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\litemap-0.7.4\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"litemap","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\litemap-0.7.4\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblitemap-76440f38610704b9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"memchr 2.7.4 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\memchr-2.7.4\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\memchr-2.7.4\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libmemchr-e340aa7562d7d611.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"proc-macro2 1.0.93 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\proc-macro2-1.0.93\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro2","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\proc-macro2-1.0.93\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libproc_macro2-2439dc7557046b54.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libproc_macro2-2439dc7557046b54.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"windows_x86_64_gnu 0.52.6 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":["native=C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.52.6\\lib"],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\windows_x86_64_gnu-b7004e355cd60b08\\out"}
{"reason":"build-script-executed","package_id":"serde 1.0.217 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["no_core_net","no_diagnostic_namespace","no_core_error"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\serde-d9ace93736847c05\\out"}
{"reason":"build-script-executed","package_id":"khronos_api 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\khronos_api-0e58afc51460af7d\\out"}
{"reason":"build-script-executed","package_id":"windows_x86_64_gnu 0.48.5 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":["native=C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.48.5\\lib"],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\windows_x86_64_gnu-0f5a29f8c430ee19\\out"}
{"reason":"build-script-executed","package_id":"windows_x86_64_gnu 0.42.2 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":["native=C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.42.2\\lib"],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\windows_x86_64_gnu-f69ae9e0288efc68\\out"}
{"reason":"compiler-artifact","package_id":"xml-rs 0.8.25 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\xml-rs-0.8.25\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"xml","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\xml-rs-0.8.25\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libxml-5b53425328e90297.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libxml-5b53425328e90297.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-x86_64-pc-windows-gnu-0.4.0\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-x86_64-pc-windows-gnu-0.4.0\\build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\winapi-x86_64-pc-windows-gnu-1256b69d1f0f6749\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"log 0.4.25 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\log-0.4.25\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"log","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\log-0.4.25\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblog-7af44601eb799f69.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblog-7af44601eb799f69.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"lock_api 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lock_api-0.4.12\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lock_api-0.4.12\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["atomic_usize","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\lock_api-97408838105e1972\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"syn 1.0.109 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-1.0.109\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-1.0.109\\build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["derive","full","parsing","printing","proc-macro","quote"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\syn-12c5a8061fe66e10\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_locid_transform_data 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_locid_transform_data-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_locid_transform_data","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_locid_transform_data-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_locid_transform_data-cdd61d9d2149c76c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"parking_lot_core 0.9.10 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\parking_lot_core-0.9.10\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\parking_lot_core-0.9.10\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\parking_lot_core-e15b5d38e1789b9e\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"winapi 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-0.3.9\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-0.3.9\\build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["consoleapi","errhandlingapi","fileapi","handleapi","libloaderapi","processenv","windef","winuser"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\winapi-e6f0fa95848fef14\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_properties_data 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_properties_data-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_properties_data","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_properties_data-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_properties_data-d08dcf855e178c76.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"version_check 0.9.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\version_check-0.9.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"version_check","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\version_check-0.9.5\\src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libversion_check-01d1802c94c504b7.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libversion_check-01d1802c94c504b7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"quote 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\quote-1.0.38\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\quote-1.0.38\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libquote-75bd5959747dad2f.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libquote-75bd5959747dad2f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows_x86_64_gnu 0.52.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.52.6\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows_x86_64_gnu","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.52.6\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_x86_64_gnu-74dc13483a8f635a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows_x86_64_gnu 0.48.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.48.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows_x86_64_gnu","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.48.5\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_x86_64_gnu-8e03e83e02fcc12c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"khronos_api 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\khronos_api-3.1.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"khronos_api","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\khronos_api-3.1.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libkhronos_api-9efe76b54c0611d2.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libkhronos_api-9efe76b54c0611d2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows_x86_64_gnu 0.42.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.42.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows_x86_64_gnu","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows_x86_64_gnu-0.42.2\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_x86_64_gnu-37151d8ab7b6434e.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":["native=C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-x86_64-pc-windows-gnu-0.4.0\\lib"],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\winapi-x86_64-pc-windows-gnu-dea8d3b3c60663aa\\out"}
{"reason":"build-script-executed","package_id":"lock_api 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["has_const_fn_trait_bound"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\lock_api-b4be710afebdfe4c\\out"}
{"reason":"build-script-executed","package_id":"syn 1.0.109 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["syn_disable_nightly_tests"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\syn-907c08a04678fb3d\\out"}
{"reason":"build-script-executed","package_id":"parking_lot_core 0.9.10 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\parking_lot_core-14639c92ea6c6da9\\out"}
{"reason":"build-script-executed","package_id":"winapi 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":["dylib=winapi_gdi32","dylib=winapi_kernel32","dylib=winapi_msimg32","dylib=winapi_opengl32","dylib=winapi_user32","dylib=winapi_winspool"],"linked_paths":[],"cfgs":["feature=\"vcruntime\"","feature=\"minwindef\"","feature=\"wincon\"","feature=\"wincontypes\"","feature=\"ntdef\"","feature=\"minwinbase\"","feature=\"excpt\"","feature=\"guiddef\"","feature=\"limits\"","feature=\"ntstatus\"","feature=\"winnt\"","feature=\"vadefs\"","feature=\"basetsd\"","feature=\"wingdi\"","feature=\"ktmtypes\""],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\winapi-6c3bf7809f1774dc\\out"}
{"reason":"compiler-artifact","package_id":"scopeguard 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\scopeguard-1.2.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scopeguard","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\scopeguard-1.2.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libscopeguard-7daff8db5ef1141e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"bitflags 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bitflags-1.3.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bitflags-1.3.2\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libbitflags-5259482cf7a41e39.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"ahash 0.8.11 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ahash-0.8.11\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ahash-0.8.11\\./build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["no-rng","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\ahash-f5c70bf86d5c4c9e\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"write16 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\write16-1.0.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"write16","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\write16-1.0.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwrite16-65b3baf020eec4bb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"ttf-parser 0.25.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ttf-parser-0.25.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ttf_parser","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ttf-parser-0.25.1\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["apple-layout","glyph-names","opentype-layout","std","variable-fonts"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libttf_parser-19cb9ac614e1221a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"accesskit 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit-0.12.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"accesskit","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit-0.12.3\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libaccesskit-73c63104eddc86d7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"syn 2.0.96 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-2.0.96\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-2.0.96\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","fold","full","parsing","printing","proc-macro","visit","visit-mut"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsyn-f24c46fede5d3038.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsyn-f24c46fede5d3038.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-targets 0.52.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-targets-0.52.6\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows_targets","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-targets-0.52.6\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_targets-d4e9c54bbced8f6e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-targets 0.48.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-targets-0.48.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows-targets","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-targets-0.48.5\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_targets-485fb931a905a071.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"gl_generator 0.14.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\gl_generator-0.14.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"gl_generator","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\gl_generator-0.14.0\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libgl_generator-0b0380bec66d9ac9.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libgl_generator-0b0380bec66d9ac9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-targets 0.42.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-targets-0.42.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows-targets","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-targets-0.42.2\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_targets-cb1e271fda56e953.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-x86_64-pc-windows-gnu-0.4.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"winapi-x86_64-pc-windows-gnu","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-x86_64-pc-windows-gnu-0.4.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwinapi_x86_64_pc_windows_gnu-d31a541e40f838e8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"lock_api 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lock_api-0.4.12\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lock_api","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lock_api-0.4.12\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["atomic_usize","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblock_api-f005c60e9a07a3ee.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"syn 1.0.109 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-1.0.109\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\syn-1.0.109\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["derive","full","parsing","printing","proc-macro","quote"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsyn-187ce29f86709149.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsyn-187ce29f86709149.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"pin-project-lite 0.2.16 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\pin-project-lite-0.2.16\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pin_project_lite","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\pin-project-lite-0.2.16\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libpin_project_lite-fa0b7b970cf51b34.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"utf16_iter 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\utf16_iter-1.0.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"utf16_iter","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\utf16_iter-1.0.5\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libutf16_iter-d26b74b7ba6a7633.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_normalizer_data 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_normalizer_data-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_normalizer_data","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_normalizer_data-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_normalizer_data-75cd260d765f3123.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"utf8_iter 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\utf8_iter-1.0.4\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"utf8_iter","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\utf8_iter-1.0.4\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libutf8_iter-6818a5e4a6ba5ef3.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"ahash 0.8.11 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["feature=\"folded_multiply\""],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\ahash-4ddf5aa8f53885fe\\out"}
{"reason":"compiler-artifact","package_id":"owned_ttf_parser 0.25.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\owned_ttf_parser-0.25.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"owned_ttf_parser","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\owned_ttf_parser-0.25.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["apple-layout","default","glyph-names","opentype-layout","std","variable-fonts"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libowned_ttf_parser-affc44acd24b66aa.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"winit 0.28.7 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winit-0.28.7\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winit-0.28.7\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","mio","percent-encoding","sctk","sctk-adwaita","wayland","wayland-client","wayland-commons","wayland-csd-adwaita","wayland-dlopen","wayland-protocols","x11","x11-dl"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\winit-a202245861f9f851\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"raw-window-handle 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\raw-window-handle-0.5.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"raw-window-handle","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\raw-window-handle-0.5.2\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libraw_window_handle-4b2486b39062ddab.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"serde_derive 1.0.217 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde_derive-1.0.217\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"serde_derive","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde_derive-1.0.217\\src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\serde_derive-4609992867ab452b.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libserde_derive-4609992867ab452b.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"synstructure 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.13.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"synstructure","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.13.1\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsynstructure-21707ee023cfeecc.rlib","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsynstructure-21707ee023cfeecc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"zerovec-derive 0.10.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerovec-derive-0.10.3\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"zerovec-derive","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerovec-derive-0.10.3\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\zerovec_derive-79fd1b3cc7535fc5.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libzerovec_derive-79fd1b3cc7535fc5.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"displaydoc 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\displaydoc-0.2.5\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"displaydoc","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\displaydoc-0.2.5\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\displaydoc-24d004da18ab25d8.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libdisplaydoc-24d004da18ab25d8.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_provider_macros 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_provider_macros-1.5.0\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"icu_provider_macros","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_provider_macros-1.5.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\icu_provider_macros-dcc642d453a9526f.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_provider_macros-dcc642d453a9526f.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"bytemuck_derive 1.8.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bytemuck_derive-1.8.1\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"bytemuck_derive","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bytemuck_derive-1.8.1\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\bytemuck_derive-163ae4a0b55e9cb7.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libbytemuck_derive-163ae4a0b55e9cb7.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-sys 0.59.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.59.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows_sys","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.59.0\\src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["Win32","Win32_Foundation","Win32_Storage","Win32_Storage_FileSystem","Win32_System","Win32_System_Console","Win32_System_SystemInformation","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_sys-c6d0e455d49b7375.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"winapi 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-0.3.9\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"winapi","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-0.3.9\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["consoleapi","errhandlingapi","fileapi","handleapi","libloaderapi","processenv","windef","winuser"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwinapi-4dd403f4f8d42998.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-sys 0.45.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.45.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows-sys","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.45.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["Win32","Win32_Devices","Win32_Devices_HumanInterfaceDevice","Win32_Foundation","Win32_Globalization","Win32_Graphics","Win32_Graphics_Dwm","Win32_Graphics_Gdi","Win32_Graphics_OpenGL","Win32_Media","Win32_System","Win32_System_Com","Win32_System_Com_StructuredStorage","Win32_System_LibraryLoader","Win32_System_Ole","Win32_System_SystemInformation","Win32_System_SystemServices","Win32_System_Threading","Win32_System_WindowsProgramming","Win32_UI","Win32_UI_Accessibility","Win32_UI_Controls","Win32_UI_HiDpi","Win32_UI_Input","Win32_UI_Input_Ime","Win32_UI_Input_KeyboardAndMouse","Win32_UI_Input_Pointer","Win32_UI_Input_Touch","Win32_UI_Shell","Win32_UI_TextServices","Win32_UI_WindowsAndMessaging","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_sys-fae93b8e58e37ddb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"parking_lot_core 0.9.10 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\parking_lot_core-0.9.10\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot_core","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\parking_lot_core-0.9.10\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libparking_lot_core-4818837c97ee66c7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"ab_glyph_rasterizer 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ab_glyph_rasterizer-0.1.8\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ab_glyph_rasterizer","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ab_glyph_rasterizer-0.1.8\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libab_glyph_rasterizer-6a55501dbd6ffd2d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"zerocopy 0.7.35 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerocopy-0.7.35\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerocopy","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerocopy-0.7.35\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libzerocopy-9ec76a9dfe694528.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"paste 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\paste-1.0.15\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\paste-1.0.15\\build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\paste-a423039a71b40ce2\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"simd-adler32 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\simd-adler32-0.3.7\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"simd-adler32","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\simd-adler32-0.3.7\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["const-generics","default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsimd_adler32-6e5fa1f8ea511dad.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-sys 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.52.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows-sys","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.52.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["Wdk","Wdk_Foundation","Wdk_Storage","Wdk_Storage_FileSystem","Wdk_System","Wdk_System_IO","Win32","Win32_Foundation","Win32_Networking","Win32_Networking_WinSock","Win32_Security","Win32_Storage","Win32_Storage_FileSystem","Win32_System","Win32_System_Console","Win32_System_IO","Win32_System_Pipes","Win32_System_SystemServices","Win32_System_Threading","Win32_System_WindowsProgramming","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_sys-c95afc219f357d8d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin_egl_sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_egl_sys-0.5.1\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_egl_sys-0.5.1\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin_egl_sys-f487ed20888b515e\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"serde 1.0.217 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde-1.0.217\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde-1.0.217\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","serde_derive","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libserde-4b6f3767a28e895d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"zerofrom-derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerofrom-derive-0.1.5\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"zerofrom_derive","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerofrom-derive-0.1.5\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\zerofrom_derive-5ff3a618fc52d7bd.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libzerofrom_derive-5ff3a618fc52d7bd.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"yoke-derive 0.7.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yoke-derive-0.7.5\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"yoke_derive","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yoke-derive-0.7.5\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\yoke_derive-8d0b1d587513f448.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libyoke_derive-8d0b1d587513f448.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"bytemuck 1.21.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bytemuck-1.21.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytemuck","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bytemuck-1.21.0\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytemuck_derive","derive","extern_crate_alloc"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libbytemuck-0a835d6fdcfc1b64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"parking_lot 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\parking_lot-0.12.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\parking_lot-0.12.3\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libparking_lot-71c64a009d37281a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"ahash 0.8.11 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ahash-0.8.11\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ahash","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ahash-0.8.11\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["no-rng","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libahash-4e1dc73f20b9b545.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"paste 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\paste-4594444d94c6175b\\out"}
{"reason":"compiler-artifact","package_id":"ab_glyph 0.2.29 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ab_glyph-0.2.29\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ab_glyph","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ab_glyph-0.2.29\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","variable-fonts"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libab_glyph-2c2a810acc20dfc9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"winapi-util 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-util-0.1.9\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"winapi_util","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winapi-util-0.1.9\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwinapi_util-49e5e0cc4f2c9a68.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin_wgl_sys 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_wgl_sys-0.4.0\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_wgl_sys-0.4.0\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin_wgl_sys-8ce53a0028cf77a3\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-interface 0.48.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-interface-0.48.0\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"windows-interface","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-interface-0.48.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\windows_interface-c01688b062752834.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_interface-c01688b062752834.dll.a"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"winit 0.28.7 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["windows_platform"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\winit-ef2513092f7010e7\\out"}
{"reason":"compiler-artifact","package_id":"windows-implement 0.48.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-implement-0.48.0\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"windows-implement","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-implement-0.48.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\windows_implement-1531a2b42aef245c.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_implement-1531a2b42aef245c.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"aho-corasick 1.1.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\aho-corasick-1.1.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\aho-corasick-1.1.3\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["perf-literal","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libaho_corasick-f23c7c4d06a2f641.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"instant 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\instant-0.1.13\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"instant","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\instant-0.1.13\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["js-sys","wasm-bindgen","wasm-bindgen_rs","web-sys"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libinstant-149cc3bd615e7755.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"num-traits 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\num-traits-0.2.19\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\num-traits-0.2.19\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\num-traits-2788cf8c7b92826d\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"log 0.4.25 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\log-0.4.25\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"log","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\log-0.4.25\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblog-4f9a785f4eeb1ff4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"zerofrom 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerofrom-0.1.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerofrom","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerofrom-0.1.5\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","derive"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libzerofrom-dcd11c716604ea3c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"emath 0.24.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\emath-0.24.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"emath","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\emath-0.24.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytemuck","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libemath-730d7e987b90dc13.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"ecolor 0.24.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ecolor-0.24.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ecolor","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ecolor-0.24.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytemuck","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libecolor-9a5bc0632d9bf32b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"slab 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\slab-0.4.9\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\slab-0.4.9\\build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\slab-e2e8658f0099b8bc\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"nohash-hasher 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nohash-hasher-0.2.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nohash-hasher","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nohash-hasher-0.2.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libnohash_hasher-bdf349526d89a429.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"adler2 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\adler2-2.0.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"adler2","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\adler2-2.0.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libadler2-79fd29d88327ee7e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.8.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-syntax-0.8.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_syntax","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-syntax-0.8.5\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std","unicode-case","unicode-perl"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libregex_syntax-d5c7a35cafc8cf2e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"crossbeam-utils 0.8.21 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crossbeam-utils-0.8.21\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crossbeam-utils-0.8.21\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\crossbeam-utils-f88299ea6153cf7d\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"percent-encoding 2.3.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\percent-encoding-2.3.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"percent-encoding","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\percent-encoding-2.3.1\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libpercent_encoding-039a89d51e45eddc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows 0.48.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.48.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.48.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["Win32","Win32_Foundation","Win32_Graphics","Win32_Graphics_Gdi","Win32_System","Win32_System_Com","Win32_System_LibraryLoader","Win32_System_Ole","Win32_UI","Win32_UI_Accessibility","Win32_UI_Input","Win32_UI_Input_KeyboardAndMouse","Win32_UI_WindowsAndMessaging","default","implement","windows-implement","windows-interface"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows-21abda774e21aacc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"paste 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\paste-1.0.15\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"paste","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\paste-1.0.15\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\paste-9e7fc3b9be7d3e68.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libpaste-9e7fc3b9be7d3e68.dll.a"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"num-traits 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["has_total_cmp"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\num-traits-2bc4613edd0232aa\\out"}
{"reason":"build-script-executed","package_id":"glutin_wgl_sys 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin_wgl_sys-c7650b5c3e3d04f0\\out"}
{"reason":"build-script-executed","package_id":"glutin_egl_sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin_egl_sys-931ea599c316ff71\\out"}
{"reason":"compiler-artifact","package_id":"accesskit_consumer 0.16.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit_consumer-0.16.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"accesskit_consumer","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit_consumer-0.16.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libaccesskit_consumer-555db48bec74ee2e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"yoke 0.7.5 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yoke-0.7.5\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"yoke","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yoke-0.7.5\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","derive","zerofrom"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libyoke-a89c60c586b464e2.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"slab 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\slab-17c3a64cf1729a38\\out"}
{"reason":"compiler-artifact","package_id":"winit 0.28.7 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winit-0.28.7\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"winit","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\winit-0.28.7\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","mio","percent-encoding","sctk","sctk-adwaita","wayland","wayland-client","wayland-commons","wayland-csd-adwaita","wayland-dlopen","wayland-protocols","x11","x11-dl"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwinit-3753c7b073077913.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-automata 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-automata-0.4.9\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_automata","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-automata-0.4.9\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","dfa-onepass","hybrid","meta","nfa-backtrack","nfa-pikevm","nfa-thompson","perf-inline","perf-literal","perf-literal-multisubstring","perf-literal-substring","std","syntax","unicode-case","unicode-perl","unicode-word-boundary"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libregex_automata-6ce54bab2af083d7.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"crossbeam-utils 0.8.21 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\crossbeam-utils-1201f769a79958f0\\out"}
{"reason":"compiler-artifact","package_id":"miniz_oxide 0.8.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\miniz_oxide-0.8.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"miniz_oxide","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\miniz_oxide-0.8.3\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","simd","simd-adler32","with-alloc"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libminiz_oxide-9d2d497d25fb55fa.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"form_urlencoded 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\form_urlencoded-1.2.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"form_urlencoded","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\form_urlencoded-1.2.1\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libform_urlencoded-272f703dfcf83286.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"epaint 0.24.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\epaint-0.24.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"epaint","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\epaint-0.24.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytemuck","default_fonts","log"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libepaint-6c10a9d84a8f3e3e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin 0.30.10 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-0.30.10\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-0.30.10\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","egl","glutin_egl_sys","glutin_glx_sys","glutin_wgl_sys","glx","libloading","wayland","wayland-sys","wgl","windows-sys","x11","x11-dl"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin-f4db45f99c1e9c83\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"crc32fast 1.4.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crc32fast-1.4.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crc32fast","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crc32fast-1.4.2\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libcrc32fast-da3f8c4d109bab7d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"memoffset 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\memoffset-0.7.1\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\memoffset-0.7.1\\build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\memoffset-b1bf7ba8a7ecc514\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tracing-core 0.1.33 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-core-0.1.33\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_core","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-core-0.1.33\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","once_cell","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtracing_core-cb005f3f0850f6e6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-sink 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-sink-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_sink","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-sink-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_sink-e48936661aff21e6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.29 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-syntax-0.6.29\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-syntax-0.6.29\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libregex_syntax-f65ad41b9d051455.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"thiserror 1.0.69 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thiserror-1.0.69\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thiserror-1.0.69\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\thiserror-423c8da55a9dadd5\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"static_assertions 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\static_assertions-1.1.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"static_assertions","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\static_assertions-1.1.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libstatic_assertions-e5e89a69c34b8bf3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"zerovec 0.10.4 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerovec-0.10.4\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerovec","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\zerovec-0.10.4\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["derive","yoke"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libzerovec-25c9c152e72e3a3a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-core 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-core-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_core","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-core-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_core-bf6564adc4caab5e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"error-code 3.3.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\error-code-3.3.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"error_code","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\error-code-3.3.1\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liberror_code-0648411bf8d25d14.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"crossbeam-utils 0.8.21 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crossbeam-utils-0.8.21\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_utils","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crossbeam-utils-0.8.21\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libcrossbeam_utils-fa2199be81ed4d24.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memoffset 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["tuple_ty","allow_clippy","maybe_uninit","doctests","raw_ref_macros"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\memoffset-6d2113305f9304b8\\out"}
{"reason":"compiler-artifact","package_id":"accesskit_windows 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit_windows-0.15.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"accesskit_windows","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit_windows-0.15.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libaccesskit_windows-3649c217e9d3e93b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"flate2 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\flate2-1.0.35\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"flate2","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\flate2-1.0.35\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["any_impl","default","miniz_oxide","rust_backend"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libflate2-5c972e9f438f7033.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.11.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-1.11.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-1.11.1\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["perf","perf-backtrack","perf-cache","perf-dfa","perf-inline","perf-literal","perf-onepass","std","unicode-case","unicode-perl"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libregex-9deb092960bb5286.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"egui 0.24.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\egui-0.24.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"egui","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\egui-0.24.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["accesskit","bytemuck","default","default_fonts","log"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libegui-c2aeaa7782edd158.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"glutin 0.30.10 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["egl_backend","wgl_backend"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin-5f8c1ec376578b0b\\out"}
{"reason":"compiler-artifact","package_id":"slab 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\slab-0.4.9\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"slab","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\slab-0.4.9\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libslab-974060dc425193d6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-automata 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-automata-0.1.10\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-automata","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\regex-automata-0.1.10\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","regex-syntax","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libregex_automata-ad9141f160888502.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"thiserror 1.0.69 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\thiserror-c8eab360608ada21\\out"}
{"reason":"compiler-artifact","package_id":"num-traits 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\num-traits-0.2.19\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num-traits","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\num-traits-0.2.19\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libnum_traits-09acccd61a59e579.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin_egl_sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_egl_sys-0.5.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"glutin_egl_sys","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_egl_sys-0.5.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libglutin_egl_sys-12418d09da486a74.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin_wgl_sys 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_wgl_sys-0.4.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"glutin_wgl_sys","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin_wgl_sys-0.4.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libglutin_wgl_sys-9d86b946cc185fe3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tinystr 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tinystr-0.7.6\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tinystr","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tinystr-0.7.6\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","zerovec"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtinystr-06ffc481486ead86.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_collections 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_collections-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_collections","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_collections-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_collections-9df64af68640ebac.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"clipboard-win 5.4.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\clipboard-win-5.4.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"clipboard-win","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\clipboard-win-5.4.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libclipboard_win-b5d2d82d09567ebc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-channel 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-channel-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_channel","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-channel-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","futures-sink","sink","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_channel-a7a82c8df60971bb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"fdeflate 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\fdeflate-0.3.7\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fdeflate","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\fdeflate-0.3.7\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfdeflate-66bbecf8a5223125.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libloading 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libloading-0.7.4\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libloading","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libloading-0.7.4\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblibloading-e1f2bbc56846dcd1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tracing-attributes 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-attributes-0.1.28\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"tracing_attributes","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-attributes-0.1.28\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\tracing_attributes-8d6e86d1822a9ead.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtracing_attributes-8d6e86d1822a9ead.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-macro 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-macro-0.3.31\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"futures_macro","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-macro-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\futures_macro-f347d51ea8f3ce09.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_macro-f347d51ea8f3ce09.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"thiserror-impl 1.0.69 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thiserror-impl-1.0.69\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thiserror-impl-1.0.69\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\thiserror_impl-fe2268f60d9277ca.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libthiserror_impl-fe2268f60d9277ca.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-sys 0.48.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.48.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows-sys","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-sys-0.48.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["Win32","Win32_Foundation","Win32_Globalization","Win32_Security","Win32_Storage","Win32_Storage_FileSystem","Win32_System","Win32_System_Com","Win32_System_IO","Win32_System_Threading","Win32_System_WindowsProgramming","Win32_UI","Win32_UI_Shell","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_sys-93460ed314aa65ea.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin-winit 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-winit-0.3.0\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-winit-0.3.0\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","egl","glx","wayland","wgl","x11"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin-winit-8bf25351f7de6a32\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"overload 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\overload-0.1.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"overload","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\overload-0.1.1\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liboverload-55e9a80b9d31c263.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"itoa 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\itoa-1.0.14\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itoa","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\itoa-1.0.14\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libitoa-90ad4824cf1f45ad.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"pin-utils 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\pin-utils-0.1.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pin-utils","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\pin-utils-0.1.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libpin_utils-658e1ef964026fc1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-io 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-io-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_io","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-io-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_io-003f9a0e6562bcc0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"powerfmt 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\powerfmt-0.2.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"powerfmt","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\powerfmt-0.2.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libpowerfmt-a463cf7df884869c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_locid 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_locid-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_locid","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_locid-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["zerovec"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_locid-7de4b12c017a2af9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"lazy_static 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lazy_static-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lazy_static-1.5.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblazy_static-3fc862cb840c41c6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.169 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libc-0.2.169\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libc-0.2.169\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\libc-f906aa84b0fc366f\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-task 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-task-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_task","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-task-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_task-369c6597450005ae.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"png 0.17.16 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\png-0.17.16\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"png","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\png-0.17.16\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libpng-9ba2eb7c6353c174.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"deranged 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\deranged-0.3.11\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"deranged","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\deranged-0.3.11\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","powerfmt","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libderanged-c21f0427e7c30e96.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"thiserror 1.0.69 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thiserror-1.0.69\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thiserror-1.0.69\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libthiserror-fd8fb34473524b8f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"glutin-winit 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["egl_backend","wgl_backend"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\glutin-winit-b55fe11a5327a235\\out"}
{"reason":"compiler-artifact","package_id":"nu-ansi-term 0.46.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nu-ansi-term-0.46.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nu-ansi-term","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\nu-ansi-term-0.46.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libnu_ansi_term-948caded8a4da9d9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin 0.30.10 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-0.30.10\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"glutin","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-0.30.10\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","egl","glutin_egl_sys","glutin_glx_sys","glutin_wgl_sys","glx","libloading","wayland","wayland-sys","wgl","windows-sys","x11","x11-dl"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libglutin-dbc81e9a2cce56de.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tracing 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-0.1.41\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-0.1.41\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["attributes","default","std","tracing-attributes"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtracing-dc2c05f41aa5a904.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"arboard 3.4.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\arboard-3.4.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arboard","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\arboard-3.4.1\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libarboard-0716c905d26e0b5a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"accesskit_winit 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit_winit-0.15.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"accesskit_winit","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\accesskit_winit-0.15.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["accesskit_unix","async-io","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libaccesskit_winit-011f98805731d146.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"crossbeam-channel 0.5.14 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crossbeam-channel-0.5.14\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_channel","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\crossbeam-channel-0.5.14\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libcrossbeam_channel-00bb11c087dde767.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"memoffset 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\memoffset-0.7.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memoffset","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\memoffset-0.7.1\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libmemoffset-ec9e9581514ddbb0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"matchers 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\matchers-0.1.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"matchers","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\matchers-0.1.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libmatchers-1b177e49daf3164a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_provider 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_provider-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_provider","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_provider-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["macros"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_provider-9d89c74c110fc6b6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"sharded-slab 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\sharded-slab-0.1.7\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sharded-slab","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\sharded-slab-0.1.7\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsharded_slab-8d776dea6a3d0122.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-util 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-util-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_util","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-util-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","async-await","async-await-macro","channel","futures-channel","futures-io","futures-macro","futures-sink","io","memchr","sink","slab","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_util-1f556cb7d3a18024.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.169 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_const_extern_fn"],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\libc-c89647665c9de870\\out"}
{"reason":"compiler-artifact","package_id":"tracing-log 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-log-0.2.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing-log","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-log-0.2.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["log-tracer","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtracing_log-75ef6d42d0dc967d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"same-file 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\same-file-1.0.6\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"same-file","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\same-file-1.0.6\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsame_file-877edcae802719f7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"thread_local 1.1.8 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thread_local-1.1.8\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thread_local","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\thread_local-1.1.8\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libthread_local-59a25cee152725a4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"getrandom 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\getrandom-0.2.15\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\getrandom-0.2.15\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libgetrandom-f1c9c547ef7145f2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"num-conv 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\num-conv-0.1.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num-conv","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\num-conv-0.1.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libnum_conv-5bfdbae8d093bad8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"option-ext 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\option-ext-0.2.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"option-ext","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\option-ext-0.2.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liboption_ext-a4ee09da4a395ee1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"serde_json 1.0.135 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde_json-1.0.135\\Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde_json-1.0.135\\build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\serde_json-36b027b2527619ef\\build-script-build.exe"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"byteorder 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\byteorder-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"byteorder","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\byteorder-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libbyteorder-4d3b78106f4d8641.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"web-time 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\web-time-0.2.4\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"web-time","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\web-time-0.2.4\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libweb_time-1f891641e11d7f95.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"time-core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\time-core-0.1.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"time-core","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\time-core-0.1.2\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtime_core-798df7efb11bfb76.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"color_quant 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\color_quant-1.1.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"color_quant","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\color_quant-1.1.0\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libcolor_quant-4ffe1afd0c56c46f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glow 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glow-0.12.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"glow","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glow-0.12.3\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libglow-dee9d3988b4017b4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_locid_transform 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_locid_transform-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_locid_transform","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_locid_transform-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compiled_data"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_locid_transform-a3759bb9ad195dc6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.169 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libc-0.2.169\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libc-0.2.169\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblibc-ca005fab2a9282a2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"egui_glow 0.24.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\egui_glow-0.24.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"egui_glow","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\egui_glow-0.24.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libegui_glow-d08e3586965b2c8c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tracing-subscriber 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-subscriber-0.3.19\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_subscriber","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-subscriber-0.3.19\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","ansi","default","env-filter","fmt","matchers","nu-ansi-term","once_cell","regex","registry","sharded-slab","smallvec","std","thread_local","tracing","tracing-log"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtracing_subscriber-607c97ebe53e53e8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures-executor 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-executor-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_executor","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-executor-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures_executor-9b58ade9e4eea96b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"walkdir 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\walkdir-2.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"walkdir","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\walkdir-2.5.0\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwalkdir-b278c16e07b05dbc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"image 0.24.9 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\image-0.24.9\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"image","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\image-0.24.9\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["png"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libimage-3ff41273f01929f8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"dirs-sys 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\dirs-sys-0.4.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dirs-sys","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\dirs-sys-0.4.1\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libdirs_sys-1b32e7c7f789d2b1.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"serde_json 1.0.135 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["fast_arithmetic=\"64\""],"env":[],"out_dir":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\build\\serde_json-7ff1006e22991c0f\\out"}
{"reason":"compiler-artifact","package_id":"time 0.3.37 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\time-0.3.37\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"time","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\time-0.3.37\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","formatting","parsing","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtime-d48187dd425be25d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"glutin-winit 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-winit-0.3.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"glutin-winit","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\glutin-winit-0.3.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","egl","glx","wayland","wgl","x11"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libglutin_winit-7245740c222b051e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"termcolor 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\termcolor-1.4.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"termcolor","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\termcolor-1.4.1\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtermcolor-365080fb0e26a188.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"mio 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\mio-1.0.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"mio","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\mio-1.0.3\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["net","os-ext","os-poll"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libmio-161e4fd31d3f28d9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"socket2 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\socket2-0.5.8\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"socket2","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\socket2-0.5.8\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["all"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libsocket2-079dd2d31068ada1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"filetime 0.2.25 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\filetime-0.2.25\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"filetime","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\filetime-0.2.25\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfiletime-e65ceabfc4bc2c7f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"is-terminal 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\is-terminal-0.4.13\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"is_terminal","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\is-terminal-0.4.13\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libis_terminal-c0950ac3c2a559a6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_properties 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_properties-1.5.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_properties","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_properties-1.5.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compiled_data","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_properties-54a42fc71871851e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows-core 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-core-0.52.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows-core","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-core-0.52.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows_core-424e87b3473c6311.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tokio-macros 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tokio-macros-2.5.0\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"tokio_macros","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tokio-macros-2.5.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\tokio_macros-7bf11b1113e4e06a.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtokio_macros-7bf11b1113e4e06a.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"fastrand 2.3.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\fastrand-2.3.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fastrand","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\fastrand-2.3.0\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfastrand-79b8131bfe9bbf76.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"humantime 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\humantime-2.1.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"humantime","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\humantime-2.1.0\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libhumantime-d4fdac70f9cda772.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"bytes 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bytes-1.9.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytes","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bytes-1.9.0\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libbytes-88839ae8e924d528.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"ryu 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ryu-1.0.18\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ryu","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\ryu-1.0.18\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libryu-dee8368377414417.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"notify 6.1.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\notify-6.1.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"notify","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\notify-6.1.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["crossbeam-channel","default","fsevent-sys","macos_fsevent"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libnotify-2d1b72214b830de7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tracing-appender 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-appender-0.2.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing-appender","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tracing-appender-0.2.3\\src\\lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtracing_appender-2363499a0f33e4d7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"futures 0.3.31 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-0.3.31\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\futures-0.3.31\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","async-await","default","executor","futures-executor","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libfutures-1bf9d384bc78e75d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"dirs 5.0.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\dirs-5.0.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dirs","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\dirs-5.0.1\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libdirs-cab85a87f94abbb8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"uuid 1.12.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\uuid-1.12.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"uuid","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\uuid-1.12.0\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rng","serde","std","v4"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libuuid-ceac0c5c2144afa9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"chrono 0.4.39 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\chrono-0.4.39\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"chrono","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\chrono-0.4.39\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","android-tzdata","clock","default","iana-time-zone","js-sys","now","oldtime","serde","std","wasm-bindgen","wasmbind","winapi","windows-targets"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libchrono-576ed0eb315d13b1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libloading 0.8.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libloading-0.8.6\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libloading","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\libloading-0.8.6\\src\\lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liblibloading-78ca3ef37762e12c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"async-trait 0.1.85 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\async-trait-0.1.85\\Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"async_trait","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\async-trait-0.1.85\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\async_trait-ae7738f18ddf55fa.dll","C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libasync_trait-ae7738f18ddf55fa.dll.a"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"bitflags 2.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bitflags-2.7.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bitflags-2.7.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libbitflags-bfacd29121b9aad3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"icu_normalizer 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_normalizer-1.5.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_normalizer","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\icu_normalizer-1.5.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compiled_data","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libicu_normalizer-a68bd39f0725324b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"env_logger 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\env_logger-0.10.2\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"env_logger","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\env_logger-0.10.2\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["auto-color","color","default","humantime","regex"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libenv_logger-1b475e63a00f0f75.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tempfile 3.15.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tempfile-3.15.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tempfile","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tempfile-3.15.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","getrandom"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtempfile-6844e17f19483024.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"windows 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.52.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"windows","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.52.0\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["Win32","Win32_Foundation","Win32_Security","Win32_Storage","Win32_Storage_FileSystem","Win32_System","Win32_System_IO","Win32_System_Pipes","Win32_UI","Win32_UI_WindowsAndMessaging","default"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwindows-7b22522bfd0656af.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"tokio 1.43.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tokio-1.43.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tokio","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\tokio-1.43.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytes","default","fs","full","io-std","io-util","libc","macros","mio","net","parking_lot","process","rt","rt-multi-thread","signal","signal-hook-registry","socket2","sync","time","tokio-macros","windows-sys"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libtokio-4b6aa434e8f8554b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"serde_json 1.0.135 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde_json-1.0.135\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_json","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\serde_json-1.0.135\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libserde_json-9fc729dde146143d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"idna_adapter 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\idna_adapter-1.2.0\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"idna_adapter","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\idna_adapter-1.2.0\\src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compiled_data"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libidna_adapter-d64fa0595c7dc291.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"idna 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\idna-1.0.3\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"idna","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\idna-1.0.3\\src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","compiled_data","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libidna-f8cb76d86c016cb3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"url 2.5.4 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\url-2.5.4\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"url","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\url-2.5.4\\src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\liburl-e10b4578f47c7147.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"webbrowser 0.8.15 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\webbrowser-0.8.15\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"webbrowser","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\webbrowser-0.8.15\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libwebbrowser-565700276fe7a4bb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"egui-winit 0.24.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\egui-winit-0.24.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"egui-winit","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\egui-winit-0.24.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["accesskit","accesskit_winit","arboard","bytemuck","clipboard","links","smithay-clipboard","wayland","webbrowser","x11"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libegui_winit-2ae1ec272b00e302.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"eframe 0.24.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\eframe-0.24.1\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eframe","src_path":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\eframe-0.24.1\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["accesskit","default","default_fonts","glow","wayland","web_screen_reader","x11"],"filenames":["C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\target\\debug\\deps\\libeframe-1ed4b8c6863ea45a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0432]: unresolved import `windows::Win32::Foundation::CREATESTRUCTA`\n --> src\\eg\\classes\\main_frame.rs:1:82\n  |\n1 | ...HINSTANCE, RECT, CREATESTRUCTA};\n  |                     ^^^^^^^^^^^^^ no `CREATESTRUCTA` in `Win32::Foundation`\n  |\n  = help: consider importing one of these items instead:\n          winapi::um::winuser::CREATESTRUCTA\n          windows::Win32::UI::WindowsAndMessaging::CREATESTRUCTA\n\n","children":[{"children":[],"code":null,"level":"help","message":"consider importing one of these items instead:\nwinapi::um::winuser::CREATESTRUCTA\nwindows::Win32::UI::WindowsAndMessaging::CREATESTRUCTA","rendered":null,"spans":[]}],"code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","message":"unresolved import `windows::Win32::Foundation::CREATESTRUCTA`","spans":[{"byte_end":94,"byte_start":81,"column_end":95,"column_start":82,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":"no `CREATESTRUCTA` in `Win32::Foundation`","line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":95,"highlight_start":82,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE, RECT, CREATESTRUCTA};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0432]: unresolved import `win32`\n --> src\\eg\\winapi\\mod.rs:7:9\n  |\n7 | pub use win32::{\n  |         ^^^^^ help: a similar path exists: `crate::win32`\n  |\n  = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n\n","children":[{"children":[],"code":null,"level":"note","message":"`use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"a similar path exists","rendered":null,"spans":[{"byte_end":246,"byte_start":241,"column_end":14,"column_start":9,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":"crate::win32","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":14,"highlight_start":9,"text":"pub use win32::{"}]}]}],"code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","message":"unresolved import `win32`","spans":[{"byte_end":246,"byte_start":241,"column_end":14,"column_start":9,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":14,"highlight_start":9,"text":"pub use win32::{"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0422]: cannot find struct, variant or union type `WNDCLASSA` in this scope\n  --> src\\win32\\window.rs:11:14\n   |\n11 |     let wc = WNDCLASSA {\n   |              ^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n1  + use winapi::um::winuser::WNDCLASSA;\n   |\n\n","children":[{"children":[],"code":null,"level":"help","message":"consider importing this struct","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use winapi::um::winuser::WNDCLASSA;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}],"code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","message":"cannot find struct, variant or union type `WNDCLASSA` in this scope","spans":[{"byte_end":355,"byte_start":346,"column_end":23,"column_start":14,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":"not found in this scope","line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":14,"text":"    let wc = WNDCLASSA {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function, tuple struct or tuple variant `RegisterClassA` in this scope\n    --> src\\win32\\window.rs:20:9\n     |\n20   |   ...   RegisterClassA(&wc).map_err(|e| Error::Win32(forma...\n     |         ^^^^^^^^^^^^^^\n     |\n    ::: C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.52.0\\src\\Windows\\Win32\\UI\\WindowsAndMessaging\\mod.rs:3845:1\n     |\n3845 | / pub unsafe fn UnregisterClassA<P0, P1>(lpclassname: P0, hinstance: P1) -> ...\n3846 | | where\n3847 | |     P0: ::windows_core::IntoParam<::windows_core::PCSTR>,\n3848 | |     P1: ::windows_core::IntoParam<super::super::Foundation::HINSTANCE>,\n     | |_______________________________________________________________________- similarly named function `UnregisterClassA` defined here\n     |\nhelp: a function with a similar name exists\n     |\n20   |         UnregisterClassA(&wc).map_err(|e| Error::Win32(format!(\"Failed to register window class: {}\", e)))\n     |         ~~~~~~~~~~~~~~~~\nhelp: consider importing this function\n     |\n1    + use winapi::um::winuser::RegisterClassA;\n     |\n\n","children":[{"children":[],"code":null,"level":"help","message":"a function with a similar name exists","rendered":null,"spans":[{"byte_end":577,"byte_start":563,"column_end":23,"column_start":9,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":20,"line_start":20,"suggested_replacement":"UnregisterClassA","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":9,"text":"        RegisterClassA(&wc).map_err(|e| Error::Win32(format!(\"Failed to register window class: {}\", e)))"}]}]},{"children":[],"code":null,"level":"help","message":"consider importing this function","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use winapi::um::winuser::RegisterClassA;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function, tuple struct or tuple variant `RegisterClassA` in this scope","spans":[{"byte_end":231623,"byte_start":231387,"column_end":72,"column_start":1,"expansion":null,"file_name":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.52.0\\src\\Windows\\Win32\\UI\\WindowsAndMessaging\\mod.rs","is_primary":false,"label":"similarly named function `UnregisterClassA` defined here","line_end":3848,"line_start":3845,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":101,"highlight_start":1,"text":"pub unsafe fn UnregisterClassA<P0, P1>(lpclassname: P0, hinstance: P1) -> ::windows_core::Result<()>"},{"highlight_end":6,"highlight_start":1,"text":"where"},{"highlight_end":58,"highlight_start":1,"text":"    P0: ::windows_core::IntoParam<::windows_core::PCSTR>,"},{"highlight_end":72,"highlight_start":1,"text":"    P1: ::windows_core::IntoParam<super::super::Foundation::HINSTANCE>,"}]},{"byte_end":577,"byte_start":563,"column_end":23,"column_start":9,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":20,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":9,"text":"        RegisterClassA(&wc).map_err(|e| Error::Win32(format!(\"Failed to register window class: {}\", e)))"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function, tuple struct or tuple variant `UpdateWindow` in this scope\n  --> src\\win32\\window.rs:62:9\n   |\n62 |   ...   UpdateWindow(hwnd).map_err(|e| Error::Win32(format!(...\n   |         ^^^^^^^^^^^^\n   |\n  ::: C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.52.0\\src\\Windows\\Win32\\UI\\WindowsAndMessaging\\mod.rs:31:1\n   |\n31 | / pub unsafe fn AnimateWindow<P0>(hwnd: P0, dwtime: u32, dwflags: ANIMA...\n32 | | where\n33 | |     P0: ::windows_core::IntoParam<super::super::Foundation::HWND>,\n   | |__________________________________________________________________- similarly named function `AnimateWindow` defined here\n   |\nhelp: a function with a similar name exists\n   |\n62 |         AnimateWindow(hwnd).map_err(|e| Error::Win32(format!(\"Failed to update window: {}\", e)))\n   |         ~~~~~~~~~~~~~\nhelp: consider importing this function\n   |\n1  + use winapi::um::winuser::UpdateWindow;\n   |\n\n","children":[{"children":[],"code":null,"level":"help","message":"a function with a similar name exists","rendered":null,"spans":[{"byte_end":1551,"byte_start":1539,"column_end":21,"column_start":9,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":62,"line_start":62,"suggested_replacement":"AnimateWindow","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":21,"highlight_start":9,"text":"        UpdateWindow(hwnd).map_err(|e| Error::Win32(format!(\"Failed to update window: {}\", e)))"}]}]},{"children":[],"code":null,"level":"help","message":"consider importing this function","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use winapi::um::winuser::UpdateWindow;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function, tuple struct or tuple variant `UpdateWindow` in this scope","spans":[{"byte_end":1955,"byte_start":1767,"column_end":67,"column_start":1,"expansion":null,"file_name":"C:\\Users\\Dan\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\windows-0.52.0\\src\\Windows\\Win32\\UI\\WindowsAndMessaging\\mod.rs","is_primary":false,"label":"similarly named function `AnimateWindow` defined here","line_end":33,"line_start":31,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":116,"highlight_start":1,"text":"pub unsafe fn AnimateWindow<P0>(hwnd: P0, dwtime: u32, dwflags: ANIMATE_WINDOW_FLAGS) -> ::windows_core::Result<()>"},{"highlight_end":6,"highlight_start":1,"text":"where"},{"highlight_end":67,"highlight_start":1,"text":"    P0: ::windows_core::IntoParam<super::super::Foundation::HWND>,"}]},{"byte_end":1551,"byte_start":1539,"column_end":21,"column_start":9,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":62,"line_start":62,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":9,"text":"        UpdateWindow(hwnd).map_err(|e| Error::Win32(format!(\"Failed to update window: {}\", e)))"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function, tuple struct or tuple variant `ScreenToClient` in this scope\n  --> src\\win32\\utils.rs:61:9\n   |\n61 |         ScreenToClient(hwnd, &mut pt)\n   |         ^^^^^^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  + use winapi::um::winuser::ScreenToClient;\n   |\n\n","children":[{"children":[],"code":null,"level":"help","message":"consider importing this function","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use winapi::um::winuser::ScreenToClient;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, RECT, POINT};"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function, tuple struct or tuple variant `ScreenToClient` in this scope","spans":[{"byte_end":2100,"byte_start":2086,"column_end":23,"column_start":9,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":"not found in this scope","line_end":61,"line_start":61,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":9,"text":"        ScreenToClient(hwnd, &mut pt)"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function, tuple struct or tuple variant `ClientToScreen` in this scope\n  --> src\\win32\\utils.rs:70:9\n   |\n70 |         ClientToScreen(hwnd, &mut pt)\n   |         ^^^^^^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this function\n   |\n1  + use winapi::um::winuser::ClientToScreen;\n   |\n\n","children":[{"children":[],"code":null,"level":"help","message":"consider importing this function","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use winapi::um::winuser::ClientToScreen;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, RECT, POINT};"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function, tuple struct or tuple variant `ClientToScreen` in this scope","spans":[{"byte_end":2387,"byte_start":2373,"column_end":23,"column_start":9,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":"not found in this scope","line_end":70,"line_start":70,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":9,"text":"        ClientToScreen(hwnd, &mut pt)"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0412]: cannot find type `BOOL` in this scope\n   --> src\\win32\\utils.rs:127:72\n    |\n127 | ... HWND, lparam: LPARAM) -> BOOL {\n    |                              ^^^^\n    |\nhelp: a builtin type with a similar name exists\n    |\n127 |     unsafe extern \"system\" fn enum_proc(hwnd: HWND, lparam: LPARAM) -> bool {\n    |                                                                        ~~~~\nhelp: consider importing one of these items\n    |\n1   + use winapi::shared::minwindef::BOOL;\n    |\n1   + use windows::Win32::Foundation::BOOL;\n    |\n1   + use windows::core::imp::BOOL;\n    |\n\n","children":[{"children":[],"code":null,"level":"help","message":"a builtin type with a similar name exists","rendered":null,"spans":[{"byte_end":4062,"byte_start":4058,"column_end":76,"column_start":72,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":127,"line_start":127,"suggested_replacement":"bool","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":76,"highlight_start":72,"text":"    unsafe extern \"system\" fn enum_proc(hwnd: HWND, lparam: LPARAM) -> BOOL {"}]}]},{"children":[],"code":null,"level":"help","message":"consider importing one of these items","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use winapi::shared::minwindef::BOOL;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, RECT, POINT};"}]},{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use windows::Win32::Foundation::BOOL;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, RECT, POINT};"}]},{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use windows::core::imp::BOOL;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, RECT, POINT};"}]}]}],"code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","message":"cannot find type `BOOL` in this scope","spans":[{"byte_end":4062,"byte_start":4058,"column_end":76,"column_start":72,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":127,"line_start":127,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":76,"highlight_start":72,"text":"    unsafe extern \"system\" fn enum_proc(hwnd: HWND, lparam: LPARAM) -> BOOL {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0425]: cannot find function, tuple struct or tuple variant `BOOL` in this scope\n   --> src\\win32\\utils.rs:129:9\n    |\n129 |         BOOL(if callback(hwnd) { 1 } else { 0 })\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple struct\n    |\n1   + use windows::Win32::Foundation::BOOL;\n    |\n\n","children":[{"children":[],"code":null,"level":"help","message":"consider importing this tuple struct","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use windows::Win32::Foundation::BOOL;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, RECT, POINT};"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function, tuple struct or tuple variant `BOOL` in this scope","spans":[{"byte_end":4157,"byte_start":4153,"column_end":13,"column_start":9,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":"not found in this scope","line_end":129,"line_start":129,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":13,"highlight_start":9,"text":"        BOOL(if callback(hwnd) { 1 } else { 0 })"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `std::error::Error as StdError`\n --> src\\core\\error.rs:1:5\n  |\n1 | use std::error::Error as StdError;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":34,"byte_start":0,"column_end":35,"column_start":1,"expansion":null,"file_name":"src\\core\\error.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":1,"text":"use std::error::Error as StdError;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `std::error::Error as StdError`","spans":[{"byte_end":33,"byte_start":4,"column_end":34,"column_start":5,"expansion":null,"file_name":"src\\core\\error.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":5,"text":"use std::error::Error as StdError;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `std::fmt`\n --> src\\core\\error.rs:2:5\n  |\n2 | use std::fmt;\n  |     ^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":49,"byte_start":36,"column_end":14,"column_start":1,"expansion":null,"file_name":"src\\core\\error.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":14,"highlight_start":1,"text":"use std::fmt;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `std::fmt`","spans":[{"byte_end":48,"byte_start":40,"column_end":13,"column_start":5,"expansion":null,"file_name":"src\\core\\error.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":13,"highlight_start":5,"text":"use std::fmt;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `Path`\n --> src\\core\\config.rs:1:17\n  |\n1 | use std::path::{Path, PathBuf};\n  |                 ^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":22,"byte_start":16,"column_end":23,"column_start":17,"expansion":null,"file_name":"src\\core\\config.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":17,"text":"use std::path::{Path, PathBuf};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `Path`","spans":[{"byte_end":20,"byte_start":16,"column_end":21,"column_start":17,"expansion":null,"file_name":"src\\core\\config.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"use std::path::{Path, PathBuf};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `crate::core::Error`\n --> src\\core\\config.rs:3:5\n  |\n3 | use crate::core::Error;\n  |     ^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":94,"byte_start":71,"column_end":24,"column_start":1,"expansion":null,"file_name":"src\\core\\config.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":24,"highlight_start":1,"text":"use crate::core::Error;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `crate::core::Error`","spans":[{"byte_end":93,"byte_start":75,"column_end":23,"column_start":5,"expansion":null,"file_name":"src\\core\\config.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":5,"text":"use crate::core::Error;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `thiserror::Error`\n --> src\\core\\config.rs:4:5\n  |\n4 | use thiserror::Error;\n  |     ^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":117,"byte_start":96,"column_end":22,"column_start":1,"expansion":null,"file_name":"src\\core\\config.rs","is_primary":true,"label":null,"line_end":4,"line_start":4,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":22,"highlight_start":1,"text":"use thiserror::Error;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `thiserror::Error`","spans":[{"byte_end":116,"byte_start":100,"column_end":21,"column_start":5,"expansion":null,"file_name":"src\\core\\config.rs","is_primary":true,"label":null,"line_end":4,"line_start":4,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":5,"text":"use thiserror::Error;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `LevelFilter`\n --> src\\core\\logging.rs:4:18\n  |\n4 | use log::{Level, LevelFilter, Record};\n  |                  ^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":99,"byte_start":86,"column_end":29,"column_start":16,"expansion":null,"file_name":"src\\core\\logging.rs","is_primary":true,"label":null,"line_end":4,"line_start":4,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":29,"highlight_start":16,"text":"use log::{Level, LevelFilter, Record};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `LevelFilter`","spans":[{"byte_end":99,"byte_start":88,"column_end":29,"column_start":18,"expansion":null,"file_name":"src\\core\\logging.rs","is_primary":true,"label":null,"line_end":4,"line_start":4,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":18,"text":"use log::{Level, LevelFilter, Record};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `std::io`\n --> src\\core\\named_pipe.rs:1:5\n  |\n1 | use std::io;\n  |     ^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":12,"byte_start":0,"column_end":13,"column_start":1,"expansion":null,"file_name":"src\\core\\named_pipe.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":1,"text":"use std::io;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `std::io`","spans":[{"byte_end":11,"byte_start":4,"column_end":12,"column_start":5,"expansion":null,"file_name":"src\\core\\named_pipe.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":12,"highlight_start":5,"text":"use std::io;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `BOOL`\n --> src\\core\\named_pipe.rs:2:42\n  |\n2 | use windows::Win32::Foundation::{HANDLE, BOOL};\n  |                                          ^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":59,"byte_start":53,"column_end":46,"column_start":40,"expansion":null,"file_name":"src\\core\\named_pipe.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":40,"text":"use windows::Win32::Foundation::{HANDLE, BOOL};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `BOOL`","spans":[{"byte_end":59,"byte_start":55,"column_end":46,"column_start":42,"expansion":null,"file_name":"src\\core\\named_pipe.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":42,"text":"use windows::Win32::Foundation::{HANDLE, BOOL};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `Result as WinResult`\n  --> src\\core\\named_pipe.rs:13:28\n   |\n13 | use windows::core::{PCSTR, Result as WinResult, Error as Win...\n   |                            ^^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":480,"byte_start":459,"column_end":47,"column_start":26,"expansion":null,"file_name":"src\\core\\named_pipe.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":26,"text":"use windows::core::{PCSTR, Result as WinResult, Error as WinError};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `Result as WinResult`","spans":[{"byte_end":480,"byte_start":461,"column_end":47,"column_start":28,"expansion":null,"file_name":"src\\core\\named_pipe.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":28,"text":"use windows::core::{PCSTR, Result as WinResult, Error as WinError};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `ActionInfo`\n --> src\\eg\\action\\common.rs:1:31\n  |\n1 | use super::base::{ActionBase, ActionInfo, ActionError};\n  |                               ^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":40,"byte_start":28,"column_end":41,"column_start":29,"expansion":null,"file_name":"src\\eg\\action\\common.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":29,"text":"use super::base::{ActionBase, ActionInfo, ActionError};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `ActionInfo`","spans":[{"byte_end":40,"byte_start":30,"column_end":41,"column_start":31,"expansion":null,"file_name":"src\\eg\\action\\common.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":31,"text":"use super::base::{ActionBase, ActionInfo, ActionError};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `HINSTANCE`, `HWND`, `LPARAM`, `LRESULT`, `WPARAM`\n --> src\\eg\\winapi\\mod.rs:1:34\n  |\n1 | ...dation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};\n  |             ^^^^  ^^^^^^  ^^^^^^  ^^^^^^^  ^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":75,"byte_start":0,"column_end":76,"column_start":1,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `HINSTANCE`, `HWND`, `LPARAM`, `LRESULT`, `WPARAM`","spans":[{"byte_end":37,"byte_start":33,"column_end":38,"column_start":34,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":34,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":45,"byte_start":39,"column_end":46,"column_start":40,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":40,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":53,"byte_start":47,"column_end":54,"column_start":48,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":48,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":62,"byte_start":55,"column_end":63,"column_start":56,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":56,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":73,"byte_start":64,"column_end":74,"column_start":65,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":74,"highlight_start":65,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `windows::Win32::UI::WindowsAndMessaging::*`\n --> src\\eg\\winapi\\mod.rs:2:5\n  |\n2 | use windows::Win32::UI::WindowsAndMessaging::*;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":124,"byte_start":77,"column_end":48,"column_start":1,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":1,"text":"use windows::Win32::UI::WindowsAndMessaging::*;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `windows::Win32::UI::WindowsAndMessaging::*`","spans":[{"byte_end":123,"byte_start":81,"column_end":47,"column_start":5,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":5,"text":"use windows::Win32::UI::WindowsAndMessaging::*;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `windows::core::PCSTR`\n --> src\\eg\\winapi\\mod.rs:3:5\n  |\n3 | use windows::core::PCSTR;\n  |     ^^^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":151,"byte_start":126,"column_end":26,"column_start":1,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":26,"highlight_start":1,"text":"use windows::core::PCSTR;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `windows::core::PCSTR`","spans":[{"byte_end":150,"byte_start":130,"column_end":25,"column_start":5,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":5,"text":"use windows::core::PCSTR;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `crate::core::Error`\n --> src\\eg\\winapi\\mod.rs:4:5\n  |\n4 | use crate::core::Error;\n  |     ^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":176,"byte_start":153,"column_end":24,"column_start":1,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":4,"line_start":4,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":24,"highlight_start":1,"text":"use crate::core::Error;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `crate::core::Error`","spans":[{"byte_end":175,"byte_start":157,"column_end":23,"column_start":5,"expansion":null,"file_name":"src\\eg\\winapi\\mod.rs","is_primary":true,"label":null,"line_end":4,"line_start":4,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":5,"text":"use crate::core::Error;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `HINSTANCE`, `HWND`, `LPARAM`, `LRESULT`, `WPARAM`\n --> src\\win32\\mod.rs:1:34\n  |\n1 | ...dation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};\n  |             ^^^^  ^^^^^^  ^^^^^^  ^^^^^^^  ^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":75,"byte_start":0,"column_end":76,"column_start":1,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `HINSTANCE`, `HWND`, `LPARAM`, `LRESULT`, `WPARAM`","spans":[{"byte_end":37,"byte_start":33,"column_end":38,"column_start":34,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":34,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":45,"byte_start":39,"column_end":46,"column_start":40,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":40,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":53,"byte_start":47,"column_end":54,"column_start":48,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":48,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":62,"byte_start":55,"column_end":63,"column_start":56,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":56,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":73,"byte_start":64,"column_end":74,"column_start":65,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":74,"highlight_start":65,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `windows::Win32::UI::WindowsAndMessaging::*`\n --> src\\win32\\mod.rs:2:5\n  |\n2 | use windows::Win32::UI::WindowsAndMessaging::*;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":124,"byte_start":77,"column_end":48,"column_start":1,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":1,"text":"use windows::Win32::UI::WindowsAndMessaging::*;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `windows::Win32::UI::WindowsAndMessaging::*`","spans":[{"byte_end":123,"byte_start":81,"column_end":47,"column_start":5,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":5,"text":"use windows::Win32::UI::WindowsAndMessaging::*;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `PCSTR`\n --> src\\win32\\mod.rs:3:21\n  |\n3 | use windows::core::{PCSTR, Error as WindowsError};\n  |                     ^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":153,"byte_start":146,"column_end":28,"column_start":21,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":28,"highlight_start":21,"text":"use windows::core::{PCSTR, Error as WindowsError};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `PCSTR`","spans":[{"byte_end":151,"byte_start":146,"column_end":26,"column_start":21,"expansion":null,"file_name":"src\\win32\\mod.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":21,"text":"use windows::core::{PCSTR, Error as WindowsError};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `LPARAM`, `LRESULT`, `WPARAM`\n --> src\\win32\\window.rs:1:40\n  |\n1 | ...undation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};\n  |                     ^^^^^^  ^^^^^^  ^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":62,"byte_start":37,"column_end":63,"column_start":38,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":38,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `LPARAM`, `LRESULT`, `WPARAM`","spans":[{"byte_end":45,"byte_start":39,"column_end":46,"column_start":40,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":40,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":53,"byte_start":47,"column_end":54,"column_start":48,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":48,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]},{"byte_end":62,"byte_start":55,"column_end":63,"column_start":56,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":56,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `Error as WindowsError`\n --> src\\win32\\window.rs:3:28\n  |\n3 | use windows::core::{PCSTR, Error as WindowsError};\n  |                            ^^^^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":174,"byte_start":151,"column_end":49,"column_start":26,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":26,"text":"use windows::core::{PCSTR, Error as WindowsError};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `Error as WindowsError`","spans":[{"byte_end":174,"byte_start":153,"column_end":49,"column_start":28,"expansion":null,"file_name":"src\\win32\\window.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":28,"text":"use windows::core::{PCSTR, Error as WindowsError};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `Error as WindowsError`\n --> src\\win32\\utils.rs:3:28\n  |\n3 | use windows::core::{PCSTR, Error as WindowsError};\n  |                            ^^^^^^^^^^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":176,"byte_start":153,"column_end":49,"column_start":26,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":26,"text":"use windows::core::{PCSTR, Error as WindowsError};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `Error as WindowsError`","spans":[{"byte_end":176,"byte_start":155,"column_end":49,"column_start":28,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":28,"text":"use windows::core::{PCSTR, Error as WindowsError};"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `path`\n  --> src\\core\\plugin\\registry.rs:48:37\n   |\n48 | ...n load_plugin(&self, path: PathBuf) -> Result<Uuid, Regis...\n   |                         ^^^^ help: if this is intentional, prefix it with an underscore: `_path`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_variables)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":1445,"byte_start":1441,"column_end":41,"column_start":37,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":48,"line_start":48,"suggested_replacement":"_path","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":37,"text":"    pub async fn load_plugin(&self, path: PathBuf) -> Result<Uuid, RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `path`","spans":[{"byte_end":1445,"byte_start":1441,"column_end":41,"column_start":37,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":48,"line_start":48,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":37,"text":"    pub async fn load_plugin(&self, path: PathBuf) -> Result<Uuid, RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src\\core\\plugin\\registry.rs:54:39\n   |\n54 | ...unload_plugin(&self, id: Uuid) -> Result<(), RegistryErro...\n   |                         ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":1633,"byte_start":1631,"column_end":41,"column_start":39,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"_id","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":39,"text":"    pub async fn unload_plugin(&self, id: Uuid) -> Result<(), RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":1633,"byte_start":1631,"column_end":41,"column_start":39,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":39,"text":"    pub async fn unload_plugin(&self, id: Uuid) -> Result<(), RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src\\core\\plugin\\registry.rs:60:36\n   |\n60 | ...fn get_plugin(&self, id: Uuid) -> Result<Arc<RwLock<Box<d...\n   |                         ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":1818,"byte_start":1816,"column_end":38,"column_start":36,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":60,"line_start":60,"suggested_replacement":"_id","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":36,"text":"    pub async fn get_plugin(&self, id: Uuid) -> Result<Arc<RwLock<Box<dyn Plugin>>>, RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":1818,"byte_start":1816,"column_end":38,"column_start":36,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":60,"line_start":60,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":36,"text":"    pub async fn get_plugin(&self, id: Uuid) -> Result<Arc<RwLock<Box<dyn Plugin>>>, RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src\\core\\plugin\\registry.rs:72:38\n   |\n72 | ... start_plugin(&self, id: Uuid) -> Result<(), RegistryErro...\n   |                         ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":2195,"byte_start":2193,"column_end":40,"column_start":38,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":"_id","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":38,"text":"    pub async fn start_plugin(&self, id: Uuid) -> Result<(), RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":2195,"byte_start":2193,"column_end":40,"column_start":38,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":38,"text":"    pub async fn start_plugin(&self, id: Uuid) -> Result<(), RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src\\core\\plugin\\registry.rs:78:37\n   |\n78 | ...n stop_plugin(&self, id: Uuid) -> Result<(), RegistryErro...\n   |                         ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":2375,"byte_start":2373,"column_end":39,"column_start":37,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":"_id","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":39,"highlight_start":37,"text":"    pub async fn stop_plugin(&self, id: Uuid) -> Result<(), RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":2375,"byte_start":2373,"column_end":39,"column_start":37,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":37,"text":"    pub async fn stop_plugin(&self, id: Uuid) -> Result<(), RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src\\core\\plugin\\registry.rs:84:46\n   |\n84 | ...plugin_config(&self, id: Uuid, config: Config) -> Result<...\n   |                         ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":2578,"byte_start":2576,"column_end":48,"column_start":46,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":"_id","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":46,"text":"    pub async fn update_plugin_config(&self, id: Uuid, config: Config) -> Result<(), RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":2578,"byte_start":2576,"column_end":48,"column_start":46,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":46,"text":"    pub async fn update_plugin_config(&self, id: Uuid, config: Config) -> Result<(), RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `config`\n  --> src\\core\\plugin\\registry.rs:84:56\n   |\n84 | ...fig(&self, id: Uuid, config: Config) -> Result<(), Regist...\n   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":2592,"byte_start":2586,"column_end":62,"column_start":56,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":"_config","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":56,"text":"    pub async fn update_plugin_config(&self, id: Uuid, config: Config) -> Result<(), RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `config`","spans":[{"byte_end":2592,"byte_start":2586,"column_end":62,"column_start":56,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":56,"text":"    pub async fn update_plugin_config(&self, id: Uuid, config: Config) -> Result<(), RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src\\core\\plugin\\registry.rs:90:43\n   |\n90 | ...plugin_config(&self, id: Uuid) -> Result<Config, Registry...\n   |                         ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":2789,"byte_start":2787,"column_end":45,"column_start":43,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":90,"line_start":90,"suggested_replacement":"_id","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":43,"text":"    pub async fn get_plugin_config(&self, id: Uuid) -> Result<Config, RegistryError> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":2789,"byte_start":2787,"column_end":45,"column_start":43,"expansion":null,"file_name":"src\\core\\plugin\\registry.rs","is_primary":true,"label":null,"line_end":90,"line_start":90,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":43,"text":"    pub async fn get_plugin_config(&self, id: Uuid) -> Result<Config, RegistryError> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `config`\n  --> src\\core\\logging.rs:64:39\n   |\n64 | ...update_config(&self, config: LogConfig) -> Result<(), std...\n   |                         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`\n\n","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":1647,"byte_start":1641,"column_end":45,"column_start":39,"expansion":null,"file_name":"src\\core\\logging.rs","is_primary":true,"label":null,"line_end":64,"line_start":64,"suggested_replacement":"_config","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":39,"text":"    pub async fn update_config(&self, config: LogConfig) -> Result<(), std::io::Error> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `config`","spans":[{"byte_end":1647,"byte_start":1641,"column_end":45,"column_start":39,"expansion":null,"file_name":"src\\core\\logging.rs","is_primary":true,"label":null,"line_end":64,"line_start":64,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":39,"text":"    pub async fn update_config(&self, config: LogConfig) -> Result<(), std::io::Error> {"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `get_hwnd` found for struct `Toolbar` in the current scope\n  --> src\\eg\\classes\\main_frame.rs:94:30\n   |\n94 |                 self.toolbar.get_hwnd(), \n   |                              ^^^^^^^^ method not found in `Toolbar`\n   |\n  ::: src\\eg\\classes\\toolbar.rs:32:1\n   |\n32 | pub struct Toolbar {\n   | ------------------ method `get_hwnd` not found for this struct\n   |\n  ::: src\\eg\\classes\\mod.rs:36:8\n   |\n36 |     fn get_hwnd(&self) -> HWND;\n   |        -------- the method is available for `Toolbar` here\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n   |\n1  + use crate::eg::classes::UIComponent;\n   |\n\n","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use crate::eg::classes::UIComponent;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE, RECT, CREATESTRUCTA};"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `get_hwnd` found for struct `Toolbar` in the current scope","spans":[{"byte_end":597,"byte_start":579,"column_end":19,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\toolbar.rs","is_primary":false,"label":"method `get_hwnd` not found for this struct","line_end":32,"line_start":32,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":1,"text":"pub struct Toolbar {"}]},{"byte_end":2835,"byte_start":2827,"column_end":38,"column_start":30,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":"method not found in `Toolbar`","line_end":94,"line_start":94,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":30,"text":"                self.toolbar.get_hwnd(), "}]},{"byte_end":995,"byte_start":987,"column_end":16,"column_start":8,"expansion":null,"file_name":"src\\eg\\classes\\mod.rs","is_primary":false,"label":"the method is available for `Toolbar` here","line_end":36,"line_start":36,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":8,"text":"    fn get_hwnd(&self) -> HWND;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `get_hwnd` found for struct `StatusBar` in the current scope\n   --> src\\eg\\classes\\main_frame.rs:106:33\n    |\n106 |                 self.status_bar.get_hwnd(), \n    |                                 ^^^^^^^^ method not found in `StatusBar`\n    |\n   ::: src\\eg\\classes\\status_bar.rs:19:1\n    |\n19  | pub struct StatusBar {\n    | -------------------- method `get_hwnd` not found for this struct\n    |\n   ::: src\\eg\\classes\\mod.rs:36:8\n    |\n36  |     fn get_hwnd(&self) -> HWND;\n    |        -------- the method is available for `StatusBar` here\n    |\n    = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n    |\n1   + use crate::eg::classes::UIComponent;\n    |\n\n","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use crate::eg::classes::UIComponent;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE, RECT, CREATESTRUCTA};"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `get_hwnd` found for struct `StatusBar` in the current scope","spans":[{"byte_end":360,"byte_start":340,"column_end":21,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\status_bar.rs","is_primary":false,"label":"method `get_hwnd` not found for this struct","line_end":19,"line_start":19,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":1,"text":"pub struct StatusBar {"}]},{"byte_end":3120,"byte_start":3112,"column_end":41,"column_start":33,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":"method not found in `StatusBar`","line_end":106,"line_start":106,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":33,"text":"                self.status_bar.get_hwnd(), "}]},{"byte_end":995,"byte_start":987,"column_end":16,"column_start":8,"expansion":null,"file_name":"src\\eg\\classes\\mod.rs","is_primary":false,"label":"the method is available for `StatusBar` here","line_end":36,"line_start":36,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":8,"text":"    fn get_hwnd(&self) -> HWND;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `get_hwnd` found for struct `TreeCtrl` in the current scope\n   --> src\\eg\\classes\\main_frame.rs:119:32\n    |\n119 |                 self.tree_ctrl.get_hwnd(), \n    |                                ^^^^^^^^ method not found in `TreeCtrl`\n    |\n   ::: src\\eg\\classes\\tree_ctrl.rs:13:1\n    |\n13  | pub struct TreeCtrl {\n    | ------------------- method `get_hwnd` not found for this struct\n    |\n   ::: src\\eg\\classes\\mod.rs:36:8\n    |\n36  |     fn get_hwnd(&self) -> HWND;\n    |        -------- the method is available for `TreeCtrl` here\n    |\n    = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n    |\n1   + use crate::eg::classes::UIComponent;\n    |\n\n","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use crate::eg::classes::UIComponent;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE, RECT, CREATESTRUCTA};"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `get_hwnd` found for struct `TreeCtrl` in the current scope","spans":[{"byte_end":317,"byte_start":298,"column_end":20,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\tree_ctrl.rs","is_primary":false,"label":"method `get_hwnd` not found for this struct","line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":1,"text":"pub struct TreeCtrl {"}]},{"byte_end":3493,"byte_start":3485,"column_end":40,"column_start":32,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":"method not found in `TreeCtrl`","line_end":119,"line_start":119,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":32,"text":"                self.tree_ctrl.get_hwnd(), "}]},{"byte_end":995,"byte_start":987,"column_end":16,"column_start":8,"expansion":null,"file_name":"src\\eg\\classes\\mod.rs","is_primary":false,"label":"the method is available for `TreeCtrl` here","line_end":36,"line_start":36,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":8,"text":"    fn get_hwnd(&self) -> HWND;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `get_hwnd` found for struct `LogCtrl` in the current scope\n   --> src\\eg\\classes\\main_frame.rs:131:31\n    |\n131 |                 self.log_ctrl.get_hwnd(), \n    |                               ^^^^^^^^ method not found in `LogCtrl`\n    |\n   ::: src\\eg\\classes\\log_ctrl.rs:22:1\n    |\n22  | pub struct LogCtrl {\n    | ------------------ method `get_hwnd` not found for this struct\n    |\n   ::: src\\eg\\classes\\mod.rs:36:8\n    |\n36  |     fn get_hwnd(&self) -> HWND;\n    |        -------- the method is available for `LogCtrl` here\n    |\n    = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope; perhaps add a `use` for it:\n    |\n1   + use crate::eg::classes::UIComponent;\n    |\n\n","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","rendered":null,"spans":[{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":"use crate::eg::classes::UIComponent;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use windows::Win32::Foundation::{HWND, LPARAM, WPARAM, LRESULT, HINSTANCE, RECT, CREATESTRUCTA};"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `get_hwnd` found for struct `LogCtrl` in the current scope","spans":[{"byte_end":446,"byte_start":428,"column_end":19,"column_start":1,"expansion":null,"file_name":"src\\eg\\classes\\log_ctrl.rs","is_primary":false,"label":"method `get_hwnd` not found for this struct","line_end":22,"line_start":22,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":1,"text":"pub struct LogCtrl {"}]},{"byte_end":3847,"byte_start":3839,"column_end":39,"column_start":31,"expansion":null,"file_name":"src\\eg\\classes\\main_frame.rs","is_primary":true,"label":"method not found in `LogCtrl`","line_end":131,"line_start":131,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":31,"text":"                self.log_ctrl.get_hwnd(), "}]},{"byte_end":995,"byte_start":987,"column_end":16,"column_start":8,"expansion":null,"file_name":"src\\eg\\classes\\mod.rs","is_primary":false,"label":"the method is available for `LogCtrl` here","line_end":36,"line_start":36,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":8,"text":"    fn get_hwnd(&self) -> HWND;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `map_err` found for struct `LRESULT` in the current scope\n --> src\\win32\\utils.rs:8:49\n  |\n8 | ..., lparam).map_err(|e| Error::Win32(format!(\"Failed to send...\n  |              ^^^^^^^ method not found in `LRESULT`\n\n","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `map_err` found for struct `LRESULT` in the current scope","spans":[{"byte_end":373,"byte_start":366,"column_end":56,"column_start":49,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":"method not found in `LRESULT`","line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":49,"text":"        SendMessageA(hwnd, msg, wparam, lparam).map_err(|e| Error::Win32(format!(\"Failed to send message: {}\", e)))"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `map_err` found for type `i32` in the current scope\n  --> src\\win32\\utils.rs:21:41\n   |\n21 | ... &mut text).map_err(|e| Error::Win32(format!(\"Failed to g...\n   |                ^^^^^^^ method not found in `i32`\n\n","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `map_err` found for type `i32` in the current scope","spans":[{"byte_end":854,"byte_start":847,"column_end":48,"column_start":41,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":"method not found in `i32`","line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":41,"text":"        GetWindowTextA(hwnd, &mut text).map_err(|e| Error::Win32(format!(\"Failed to get window text: {}\", e)))?"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `map_err` found for type `i32` in the current scope\n  --> src\\win32\\utils.rs:95:14\n   |\n94 | / ...   GetClassNameA(hwnd, &mut name)\n95 | | ...       .map_err(|e| Error::Win32(format!(\"Failed to get...\n   | |           -^^^^^^^ method not found in `i32`\n   | |___________|\n   | \n\n","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `map_err` found for type `i32` in the current scope","spans":[{"byte_end":3023,"byte_start":2978,"column_end":14,"column_start":9,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":false,"label":"","line_end":95,"line_start":94,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":9,"text":"        GetClassNameA(hwnd, &mut name)"},{"highlight_end":14,"highlight_start":1,"text":"            .map_err(|e| Error::Win32(format!(\"Failed to get class name: {}\", e)))?"}]},{"byte_end":3030,"byte_start":3023,"column_end":21,"column_start":14,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":"method not found in `i32`","line_end":95,"line_start":95,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":14,"text":"            .map_err(|e| Error::Win32(format!(\"Failed to get class name: {}\", e)))?"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `map_err` found for struct `BOOL` in the current scope\n   --> src\\win32\\utils.rs:137:14\n    |\n136 | / ...   EnumChildWindows(parent, Some(enum_proc), lparam)\n137 | | ...       .map_err(|e| Error::Win32(format!(\"Failed to en...\n    | |           -^^^^^^^ method not found in `BOOL`\n    | |___________|\n    | \n\n","children":[],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `map_err` found for struct `BOOL` in the current scope","spans":[{"byte_end":4495,"byte_start":4431,"column_end":14,"column_start":9,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":false,"label":"","line_end":137,"line_start":136,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":9,"text":"        EnumChildWindows(parent, Some(enum_proc), lparam)"},{"highlight_end":14,"highlight_start":1,"text":"            .map_err(|e| Error::Win32(format!(\"Failed to enumerate child windows: {}\", e)))?;"}]},{"byte_end":4502,"byte_start":4495,"column_end":21,"column_start":14,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":"method not found in `BOOL`","line_end":137,"line_start":137,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":14,"text":"            .map_err(|e| Error::Win32(format!(\"Failed to enumerate child windows: {}\", e)))?;"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0606]: casting `&mut Box<Box<dyn FnMut(HWND) -> bool>>` as `*mut Box<dyn FnMut(HWND) -> bool>` is invalid\n   --> src\\win32\\utils.rs:134:29\n    |\n134 | ...AM((&mut boxed_callback as *mut Box<dyn FnMut(HWND) -> bool>) as...\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","children":[],"code":{"code":"E0606","explanation":"An incompatible cast was attempted.\n\nErroneous code example:\n\n```compile_fail,E0606\nlet x = &0u8; // Here, `x` is a `&u8`.\nlet y: u32 = x as u32; // error: casting `&u8` as `u32` is invalid\n```\n\nWhen casting, keep in mind that only primitive types can be cast into each\nother. Example:\n\n```\nlet x = &0u8;\nlet y: u32 = *x as u32; // We dereference it first and then cast it.\n```\n\nFor more information about casts, take a look at the Type cast section in\n[The Reference Book][1].\n\n[1]: https://doc.rust-lang.org/reference/expressions/operator-expr.html#type-cast-expressions\n"},"level":"error","message":"casting `&mut Box<Box<dyn FnMut(HWND) -> bool>>` as `*mut Box<dyn FnMut(HWND) -> bool>` is invalid","spans":[{"byte_end":4400,"byte_start":4342,"column_end":87,"column_start":29,"expansion":null,"file_name":"src\\win32\\utils.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":29,"text":"        let lparam = LPARAM((&mut boxed_callback as *mut Box<dyn FnMut(HWND) -> bool>) as isize);"}]}]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error: aborting due to 18 previous errors; 29 warnings emitted\n\n","children":[],"code":null,"level":"error","message":"aborting due to 18 previous errors; 29 warnings emitted","spans":[]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"Some errors have detailed explanations: E0412, E0422, E0425, E0432, E0599, E0606.\n","children":[],"code":null,"level":"failure-note","message":"Some errors have detailed explanations: E0412, E0422, E0425, E0432, E0599, E0606.","spans":[]}}
{"reason":"compiler-message","package_id":"eventghost 0.1.0 (path+file:///C:/Users/Dan/lab/madness_interactive/projects/rust/EventGhost-Rust)","manifest_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"eventghost","src_path":"C:\\Users\\Dan\\lab\\madness_interactive\\projects\\rust\\EventGhost-Rust\\src\\lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"For more information about an error, try `rustc --explain E0412`.\n","children":[],"code":null,"level":"failure-note","message":"For more information about an error, try `rustc --explain E0412`.","spans":[]}}
{"reason":"build-finished","success":false}
